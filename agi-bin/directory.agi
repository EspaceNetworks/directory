#!/usr/bin/php -q
<?php
require_once(dirname(__FILE__).'/directory.lib.php');
$loopcounter1=$loopcounter2=0;
$matches=false;
$search=array();
$dir=new Dir();

$matches = false;
$needs_welcome = true;
while($loopcounter1 <= $dir->dir['repeat_loops']){
	//get inital search term
	while($loopcounter2 <= $dir->dir['repeat_loops'] && !$matches ){
		//get any number of digits, terminated by timeout or #
    $buffer = '';
    if ($needs_welcome) {
      $needs_welcome = false;
		  $search=$dir->agi->fastpass_get_data($buffer, 'dir-welcome',100,3);
      if (strlen($buffer) < 3) {
		    $search=$dir->agi->fastpass_get_data($buffer, $dir->dir['announcement'],3000,3);
      }
    } else {
		  $search=$dir->agi->fastpass_get_data($buffer, $dir->dir['announcement'],3000,3);
    }
		$search=$search['result'];//being set so we can use it later
		$matches=$dir->search($search,1);
		$loopcounter2++;
	}
	//hangup if we failed to receive anything meanigfull
	if($loopcounter2 == 3){//seem like we ran out of tries... 
		$dir->agi->stream_file('sorry-youre-having-problems');
		break;
	}
	$matchesloop=0;
	$matches=$dir->search($search,1);
	//prompt the caller for more info if there are too many results (and he didnt terminate with #)

	while($matches > 1 && $matchesloop < $dir->dir['repeat_loops'] && substr($search,-1)!='#'){
    $compound = array('silence/1','conf-thereare',(integer)$matches,'users','in-the','directory','dir-enter-more-letters');
		$press=$dir->getKeypress($compound, '234567890#',3000);
		if(!empty($press['result']) || $press==0){
			$search.=$press['result'];
			$matches=$dir->search($search,1);
		}else{
			$matchesloop++;
		}
    // if they timeout and there are 3 or fewer matches then just play them
    if (empty($press['result']) && $matches <=3) {
      break;
    }
	}

	//act based on the amount of matches
	if($matches > 1 && $matches < 9){
		//draw up variable of valid key presses
		$validkeys='';
		for($i=1;$i<count($matches)+1;$i++){$validkeys.=$i;}
		
		//playback entries
		$matches=$dir->search($search);
		foreach($matches as $idx => $match){
			$ret=$dir->getKeypress('for',$validkeys,0);if(trim($ret['result'])){break;}
			$ret=$dir->readContact($matches[$idx],$validkeys,0);if(trim($ret['result'])){break;}
			$ret=$dir->getKeypress('press',$validkeys,0);if(trim($ret['result'])){break;}
			$ret=$dir->agi->say_digits($idx+1);if(trim($ret['result'])){break;}
		}
		if(trim($ret['result'])){
			call($matches[chr($ret['result'])-1]);
		}
    $dir->agi->wait_for_digit(10000);
	}elseif($matches==1){
		//call person $macthes[0];
		$matches=$dir->search($search);
		call($matches[0]);
	}else{
		$dir->agi->stream_file($dir->dir['repeat_recording']);
		$loopcounter1++;
		$search=$matches=$loopcounter2=0;
	}
}

if($loopcounter1){
	//do something if we are exiting due to to many tries
  //
	$dir->agi->set_variable('DIR_INVALID_RECORDING',$dir->dir['invalid_recording']);
	if($dir->agi_get_var('IVR_CONTEXT')){
    $dir->agi->set_extension('retivr');
	}else{
    $dest = explode(',',$dir->dir['invalid_destination']);
    $dir->agi->set_variable('DIR_INVALID_CONTEXT',$dest['0']);
    $dir->agi->set_variable('DIR_INVALID_EXTEN',$dest['1']);
    $dir->agi->set_variable('DIR_INVALID_PRI',$dest['2']);
    $dir->agi->set_extension('invalid');
	}
  $dir->agi->set_priority('1');
  exit;
}

function call($contact){
	global $dir;
	$dir->readContact($contact,$validkeys,0);
	if($dir->dir['alert_info'] != ''){
		$dir->agi->set_alertinfo($dir->dir['alert_info']);
	}
	if($dir->dir['callid_prefix'] != ''){
		$dir->agi->set_variable('CALLERID(name)',$dir->dir['callid_prefix'].$dir->dir['calleridname']);
	}
	$dir->agi->set_variable('DIR_DIAL',$contact['dial']);
	exit;
}

//send debug to asterisk cli
function debug($string, $level=3){
	global $dir;
  $dir->agi->verbose($string, $level);
}

//pointer function so that we dont have to write '$dir->' every time we want to call dbug from here
function dbug(){global $dir;$a=func_get_args();switch(func_num_args()){case 1:$dir->dbug($a[0]);break;case 2:$dir->dbug($a[0],$a[1]);break;case 3:$dir->dbug($a[0],$a[1],$a[2]);break;}}
?>

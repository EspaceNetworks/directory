#!/usr/bin/env php
<?php
require_once(dirname(__FILE__).'/directory.lib.php');
$loopcounter1=$loopcounter2=0;
$search=array();
$dir=new Dir();

$dir->agi->stream_file('dir-welcome');//say hello
while($loopcounter1 < $dir->dir['repeat_loops']){
	//get inital search term
	while($loopcounter2 < $dir->dir['repeat_loops'] && !$matches ){
		//get any number of digits, terminated by timeout or #
		unset($buffer);
		$search=$dir->agi->fastpass_get_data($buffer, $dir->dir['announcement'],3000,3);
		$search=$search['result'];//being set so we can use it later
		$matches=$dir->search($search,1);
		$loopcounter2++;
	}
	//hangup if we failed to receive anything meanigfull
	if($loopcounter2 == 3){//seem like we ran out of tries... 
		$dir->agi->stream_file('sorry-youre-having-problems');
		break;
	}
	$matchesloop=0;
	$matches=$dir->search($search,1);
dbug('$matches',$matches);
	//prompt the caller for more info if there are too many results (and he didnt terminate with #)
	while($matches > 1 && $matchesloop < $dir->dir['repeat_loops'] && substr($search,-1)!='#'){
		$press=$dir->getKeypress('dir-enter-more-letters', '234567890#',3000);
		if(!empty($press['result']) || $press==0){
			$search.=$press['result'];
			$matches=$dir->search($search,1);
		}else{
			$matchesloop++;
		}
	}

	//act based on the amount of matches
	if($matches > 1 && $matches < 9){//todo: decided how many is the max
		//draw up variable of valid key presses
		$validkeys='';
		for($i=1;$i<count($matches)+1;$i++){$validkeys.=$i;}
		
		//playback entires
		$matches=$dir->search($search);
		foreach($matches as $idx => $match){
			$ret=$dir->getKeypress('for',$validkeys,0);if(trim($ret['result'])){break;}
			$ret=$dir->readContact($matches[$idx],$validkeys,0);if(trim($ret['result'])){break;}
			$ret=$dir->getKeypress('press',$validkeys,0);if(trim($ret['result'])){break;}
			$ret=$dir->agi->say_digits($idx+1);if(trim($ret['result'])){break;}
		}
		if(trim($ret['result'])){
			call($matches[chr($ret['result'])-1]);
		}
		$dir->wait_for_digit(10000);
	}elseif($matches==1){
		//call person $macthes[0];
		$matches=$dir->search($search);
		call($matches[0]);
	}else{
		$dir->agi->stream_file($dir->dir['repeat_recording']);
		$loopcounter1++;
		$search=$matches=$loopcounter2=0;
	}
}

if($loopcounter1){
	//do something if we are exiting due to to many tries
	$dir->agi->stream_file($dir->dir['invalid_recording']);
	if($dir->agi_get_var('IVR_CONTEXT')){
		$dir->agi->goto_dest('${IVR_CONTEXT}','return','1');
	}else{
		$dir->agi->goto_dest($dir->dir['invalid_destination'],'return','1');
	}
}

$dir->agi->stream_file($dir->dir['invalid_recording']);

function call($contact){
	global $dir;
	$dir->dbug('function call',$contact);
	$dir->readContact($contact,$validkeys,0);
	if($dir->dir['alert_info']){
		$dir->agi->set_alertinfo($dir->dir['alert_info']);
	}
	if($dir->dir['callid_prefix']){
		$dir->agi->set_variable('CALLERID(name)',$dir->dir['callid_prefix'].$dir->dir['calleridname']);
	}
	
	$dir->agi->goto_dest('from-internal',$contact['dial'],'1');
	exit;
}

//pointer function so that we dont have to write '$dir->' every time we want to call dbug from here
function dbug(){global $dir;$a=func_get_args();switch(func_num_args()){case 1:$dir->dbug($a[0]);break;case 2:$dir->dbug($a[0],$a[1]);break;case 3:$dir->dbug($a[0],$a[1],$a[2]);break;}}
?>